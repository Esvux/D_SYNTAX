/* Generated By:JavaCC: Do not edit this line. ParserCodigoConstants.java */
package com.esvux.CompiladorCodigo;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserCodigoConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int _AS = 4;
  /** RegularExpression Id. */
  int _DOUBLE = 5;
  /** RegularExpression Id. */
  int _BOOL = 6;
  /** RegularExpression Id. */
  int _STRING = 7;
  /** RegularExpression Id. */
  int _CHAR = 8;
  /** RegularExpression Id. */
  int _INT = 9;
  /** RegularExpression Id. */
  int _SUB = 10;
  /** RegularExpression Id. */
  int _ENDSUB = 11;
  /** RegularExpression Id. */
  int _FUN = 12;
  /** RegularExpression Id. */
  int _ENDFUN = 13;
  /** RegularExpression Id. */
  int _IF = 14;
  /** RegularExpression Id. */
  int _ENDIF = 15;
  /** RegularExpression Id. */
  int _SWITCH = 16;
  /** RegularExpression Id. */
  int _ENDSWITCH = 17;
  /** RegularExpression Id. */
  int _WHILE = 18;
  /** RegularExpression Id. */
  int _ENDWHILE = 19;
  /** RegularExpression Id. */
  int _LOOP = 20;
  /** RegularExpression Id. */
  int _ENDLOOP = 21;
  /** RegularExpression Id. */
  int _RETURN = 22;
  /** RegularExpression Id. */
  int _THEN = 23;
  /** RegularExpression Id. */
  int _ELSEIF = 24;
  /** RegularExpression Id. */
  int _ELSE = 25;
  /** RegularExpression Id. */
  int _BREAK = 26;
  /** RegularExpression Id. */
  int _CASE = 27;
  /** RegularExpression Id. */
  int _DO = 28;
  /** RegularExpression Id. */
  int _UNTIL = 29;
  /** RegularExpression Id. */
  int _FOR = 30;
  /** RegularExpression Id. */
  int _TO = 31;
  /** RegularExpression Id. */
  int _STEP = 32;
  /** RegularExpression Id. */
  int _NEXT = 33;
  /** RegularExpression Id. */
  int _WRITE = 34;
  /** RegularExpression Id. */
  int _FIN = 35;
  /** RegularExpression Id. */
  int ID = 41;
  /** RegularExpression Id. */
  int CHAR = 42;
  /** RegularExpression Id. */
  int STR = 43;
  /** RegularExpression Id. */
  int INT = 44;
  /** RegularExpression Id. */
  int DEC = 45;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"as\"",
    "\"double\"",
    "\"bool\"",
    "\"string\"",
    "\"char\"",
    "\"int\"",
    "\"sub\"",
    "<_ENDSUB>",
    "\"function\"",
    "<_ENDFUN>",
    "\"if\"",
    "<_ENDIF>",
    "\"switch\"",
    "<_ENDSWITCH>",
    "\"while\"",
    "<_ENDWHILE>",
    "\"loop\"",
    "<_ENDLOOP>",
    "\"return\"",
    "\"then\"",
    "\"elseif\"",
    "\"else\"",
    "\"break\"",
    "\"case\"",
    "\"do\"",
    "\"until\"",
    "\"for\"",
    "\"to\"",
    "\"step\"",
    "\"next\"",
    "\"write\"",
    "\"\\n\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\"[\"",
    "\"]\"",
    "<ID>",
    "<CHAR>",
    "<STR>",
    "<INT>",
    "<DEC>",
  };

}
